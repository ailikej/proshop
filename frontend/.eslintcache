[{"/Users/ericjiang/React-learning/proshop/frontend/src/screens/RegisterScreen.js":"1","/Users/ericjiang/React-learning/proshop/frontend/src/actions/productActions.js":"2","/Users/ericjiang/React-learning/proshop/frontend/src/screens/HomeScreen.js":"3","/Users/ericjiang/React-learning/proshop/frontend/src/components/ProductCarousel.js":"4","/Users/ericjiang/React-learning/proshop/frontend/src/store.js":"5","/Users/ericjiang/React-learning/proshop/frontend/src/screens/CartScreen.js":"6","/Users/ericjiang/React-learning/proshop/frontend/src/screens/PlaceOrderScreen.js":"7","/Users/ericjiang/React-learning/proshop/frontend/src/screens/OrderListScreen.js":"8","/Users/ericjiang/React-learning/proshop/frontend/src/screens/ProductScreen.js":"9","/Users/ericjiang/React-learning/proshop/frontend/src/components/Meta.js":"10"},{"size":3114,"mtime":1626310837542,"results":"11","hashOfConfig":"12"},{"size":6533,"mtime":1627674994768,"results":"13","hashOfConfig":"12"},{"size":1888,"mtime":1627679445173,"results":"14","hashOfConfig":"12"},{"size":1376,"mtime":1627675087302,"results":"15","hashOfConfig":"12"},{"size":2430,"mtime":1627595397643,"results":"16","hashOfConfig":"12"},{"size":6076,"mtime":1626397540384,"results":"17","hashOfConfig":"12"},{"size":7464,"mtime":1626509450372,"results":"18","hashOfConfig":"12"},{"size":3645,"mtime":1627582176382,"results":"19","hashOfConfig":"12"},{"size":11024,"mtime":1627679011634,"results":"20","hashOfConfig":"12"},{"size":526,"mtime":1627678850972,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bqou1k",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ericjiang/React-learning/proshop/frontend/src/screens/RegisterScreen.js",[],"/Users/ericjiang/React-learning/proshop/frontend/src/actions/productActions.js",[],"/Users/ericjiang/React-learning/proshop/frontend/src/screens/HomeScreen.js",[],"/Users/ericjiang/React-learning/proshop/frontend/src/components/ProductCarousel.js",[],"/Users/ericjiang/React-learning/proshop/frontend/src/store.js",[],"/Users/ericjiang/React-learning/proshop/frontend/src/screens/CartScreen.js",["43"],"/Users/ericjiang/React-learning/proshop/frontend/src/screens/PlaceOrderScreen.js",[],"/Users/ericjiang/React-learning/proshop/frontend/src/screens/OrderListScreen.js",[],"/Users/ericjiang/React-learning/proshop/frontend/src/screens/ProductScreen.js",["44"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport { listProductDetails, createProductReview, listTopProducts } from '../actions/productActions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Meta from '../components/Meta'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector((state) => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector((state) => state.productReviewCreate)\n    const {\n        success: successProductReview,\n        loading: loadingProductReview,\n        error: errorProductReview,\n    } = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            alert('Review Submitted!')\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n        // if (!product._id || product._id !== match.params.id) {\n        // }\n        dispatch(listProductDetails(match.params.id))\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandeler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(\n            createProductReview(match.params.id, {\n                rating,\n                comment,\n            })\n        )\n    }\n\n    return (\n        <>\n            <Link className='btn btn-light my-3' to='/'>\n                Go Back\n            </Link>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <>\n                    <Meta title={product.name}/>\n                    <Row>\n                        <Col md={6}>\n                            <Image src={product.image} alt={product.name} fluid />\n                        </Col>\n\n                        <Col md={3}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h3>{product.name}</h3>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Rating\n                                        value={product.rating}\n                                        text={`${product.numReviews} reviews`}\n                                    />\n                                </ListGroup.Item>\n                                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                                <ListGroup.Item>Description: {product.description}</ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n\n                        <Col md={3}>\n                            <Card>\n                                <ListGroup>\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Price:</Col>\n                                            <Col>\n                                                <strong>${product.price}</strong>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Status:</Col>\n                                            <Col>\n                                                {product.countInStock > 0\n                                                    ? 'In Stock'\n                                                    : 'Out Of Stock'}\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                    {product.countInStock > 0 && (\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>Qty</Col>\n                                                <Col>\n                                                    <Form.Control\n                                                        as='select'\n                                                        value={qty}\n                                                        onChange={(e) => setQty(e.target.value)}\n                                                    >\n                                                        {[\n                                                            ...Array(product.countInStock).keys(),\n                                                        ].map((x) => (\n                                                            <option key={x + 1} value={x + 1}>\n                                                                {x + 1}\n                                                            </option>\n                                                        ))}\n                                                    </Form.Control>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    )}\n\n                                    <ListGroup.Item>\n                                        <Button\n                                            onClick={addToCartHandeler}\n                                            className='btn-block'\n                                            type='button'\n                                            disabled={product.countInStock === 0}\n                                        >\n                                            Add To Cart\n                                        </Button>\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={6}>\n                            <h2>Reviews</h2>\n                            {product.reviews.length === 0 && <Message>No Reviews</Message>}\n                            <ListGroup variant='flush'>\n                                {product.reviews.map((review) => (\n                                    <ListGroup.Item key={review._id}>\n                                        <strong>{review.name}</strong>\n                                        <Rating value={review.rating} />\n                                        <p>{review.createdAt.substring(0, 10)}</p>\n                                        <p>{review.comment}</p>\n                                    </ListGroup.Item>\n                                ))}\n                                <ListGroup.Item>\n                                    <h2>Write a Customer Review</h2>\n                                    {successProductReview && (\n                                        <Message variant='success'>\n                                            Review submitted successfully\n                                        </Message>\n                                    )}\n                                    {loadingProductReview && <Loader />}\n                                    {errorProductReview && (\n                                        <Message variant='danger'>{errorProductReview}</Message>\n                                    )}\n                                    {userInfo ? (\n                                        <Form onSubmit={submitHandler}>\n                                            <Form.Group controlId='rating'>\n                                                <Form.Label>Rating</Form.Label>\n                                                <Form.Control\n                                                    as='select'\n                                                    value={rating}\n                                                    onChange={(e) => setRating(e.target.value)}\n                                                >\n                                                    <option value=''>Select...</option>\n                                                    <option value='1'>1 - Poor</option>\n                                                    <option value='2'>2 - Fair</option>\n                                                    <option value='3'>3 - Good</option>\n                                                    <option value='4'>4 - Very Good</option>\n                                                    <option value='5'>5 - Excellent</option>\n                                                </Form.Control>\n                                            </Form.Group>\n                                            <Form.Group controlId='comment'>\n                                                <Form.Label>Comment</Form.Label>\n                                                <Form.Control\n                                                    as='textarea'\n                                                    row='3'\n                                                    value={comment}\n                                                    onChange={(e) => setComment(e.target.value)}\n                                                ></Form.Control>\n                                            </Form.Group>\n                                            <Button\n                                                disabled={loadingProductReview}\n                                                type='submit'\n                                                variant='primary'\n                                            >\n                                                Submit\n                                            </Button>\n                                        </Form>\n                                    ) : (\n                                        <Message>\n                                            Please <Link to='/login'>sign in</Link> to write a\n                                            review{' '}\n                                        </Message>\n                                    )}\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                    </Row>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default ProductScreen\n","/Users/ericjiang/React-learning/proshop/frontend/src/components/Meta.js",[],{"ruleId":"45","severity":1,"message":"46","line":12,"column":5,"nodeType":"47","messageId":"48","endLine":12,"endColumn":18},{"ruleId":"45","severity":1,"message":"49","line":6,"column":51,"nodeType":"47","messageId":"48","endLine":6,"endColumn":66},"no-unused-vars","'ListGroupItem' is defined but never used.","Identifier","unusedVar","'listTopProducts' is defined but never used."]